# This is a basic workflow to help you get started with Actions

name: Migration CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop, feature/migration-test ]
  pull_request:
    branches: [ develop, feature/migration-test ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  execute_migration:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.5
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.RootPassword }}
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Fetch initial SQL files
        run: |
          r=$(curl -I https://redmine.seichi.click/attachments/download/895/gachadata.sql | head -n 1 | awk '{print $2}')
          if [[ "$r" -ne "200" ]]; then
          echo "status: $r"
          exit 1
          fi
          wget https://redmine.seichi.click/attachments/download/895/gachadata.sql
          
          r=$(curl -I https://redmine.seichi.click/attachments/download/894/msgachadata.sql | head -n 1 | awk '{print $2}')
          if [[ "$r" -ne "200" ]]; then
          echo "status: $r"
          exit 1
          fi
          wget https://redmine.seichi.click/attachments/download/894/msgachadata.sql
          echo Initial files: fetched.
      - name: Apply test SQL
        run: |
          echo Apply test SQL:
          sudo mysql -h 127.0.0.1 --port 3306 -u root -p${{ secrets.RootPassword }} -e "SHOW DATABASES"
      - name: CREATE DATABASE seichiassist
        run: |
          mysql -h 127.0.0.1 --port 3306 -u root -p${{ secrets.RootPassword }} -e "create database if not exists seichiassist character set utf8 collate utf8_general_ci"
      - name: Apply migration SQL
        run: |
          cd $GITHUB_WORKSPACE
          ls
          cd $GITHUB_WORKSPACE/src/main/resources/db/migration
          ruby -e '`ls`.split("\n").sort_by {|x| x.gsub(/V(\d+)\.(\d+)\.(\d+)/) {
                     $1.to_i * 9999999999 + $2.to_i * 999999 + $3.to_i * 1}.to_i
                   }.each {|x|
                     puts "Applying #{x} ..."
                     puts `mysql -h 127.0.0.1 --port 3306 -u root -p${{ secrets.RootPassword }} < #{x}`
                   }'
          cd $GITHUB_WORKSPACE
      - name: Import dumped SQL
        run: |
          echo Applying gachadata.sql ...
          mysql -h 127.0.0.1 --port 3306 -u root -p${{ secrets.RootPassword }} seichiassist < gachadata.sql
          echo Applying msgachadata.sql ...
          mysql -h 127.0.0.1 --port 3306 -u root -p${{ secrets.RootPassword }} seichiassist < msgachadata.sql
      - name: Finalization
        run: |
          echo $(tput setaf 46)Migration test: Passed
          exit 0
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
